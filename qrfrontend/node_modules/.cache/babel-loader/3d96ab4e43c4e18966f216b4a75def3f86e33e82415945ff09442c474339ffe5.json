{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\santi\\\\Desktop\\\\QR\\\\qrfrontend\\\\src\\\\components\\\\QRViewer.js\",\n  _s = $RefreshSig$();\n// Nuevo componente QRViewer.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QRViewer = () => {\n  _s();\n  const [qrUrl, setQrUrl] = useState(null);\n  const generarQR = async () => {\n    const resp = await fetch('http://localhost:5000/generate-qr', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id_reserv: 'jAJ8Ks',\n        tables: '1010'\n      })\n    });\n    const data = await resp.json();\n    setQrUrl(data.qrUrl);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generarQR,\n      children: \"Generar QR\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), qrUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: qrUrl,\n      alt: \"C\\xF3digo QR\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(QRViewer, \"AafLFqmzkA2RjagZ0F9KMoZ6y20=\");\n_c = QRViewer;\nexport default QRViewer;\nvar _c;\n$RefreshReg$(_c, \"QRViewer\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","QRViewer","_s","qrUrl","setQrUrl","generarQR","resp","fetch","method","headers","body","JSON","stringify","id_reserv","tables","data","json","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/santi/Desktop/QR/qrfrontend/src/components/QRViewer.js"],"sourcesContent":["// Nuevo componente QRViewer.js\r\nimport React, { useState } from 'react';\r\n\r\nconst QRViewer = () => {\r\n  const [qrUrl, setQrUrl] = useState(null);\r\n\r\n  const generarQR = async () => {\r\n    const resp = await fetch('http://localhost:5000/generate-qr', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ id_reserv: 'jAJ8Ks', tables: '1010' })\r\n    });\r\n    const data = await resp.json();\r\n    setQrUrl(data.qrUrl);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={generarQR}>Generar QR</button>\r\n      {qrUrl && <img src={qrUrl} alt=\"CÃ³digo QR\" />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QRViewer;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMO,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;MAC5DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,SAAS,EAAE,QAAQ;QAAEC,MAAM,EAAE;MAAO,CAAC;IAC9D,CAAC,CAAC;IACF,MAAMC,IAAI,GAAG,MAAMT,IAAI,CAACU,IAAI,CAAC,CAAC;IAC9BZ,QAAQ,CAACW,IAAI,CAACZ,KAAK,CAAC;EACtB,CAAC;EAED,oBACEH,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAQkB,OAAO,EAAEb,SAAU;MAAAY,QAAA,EAAC;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC9CnB,KAAK,iBAAIH,OAAA;MAAKuB,GAAG,EAAEpB,KAAM;MAACqB,GAAG,EAAC;IAAW;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEV,CAAC;AAACpB,EAAA,CAnBID,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AAqBd,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}