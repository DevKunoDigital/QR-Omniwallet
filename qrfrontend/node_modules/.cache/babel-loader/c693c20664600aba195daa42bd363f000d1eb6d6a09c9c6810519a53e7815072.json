{"ast":null,"code":"import _objectSpread from\"C:/Users/santi/Desktop/QR/qrfrontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function getQueryParam(param){const params=new URLSearchParams(window.location.search);return params.get(param);}const RegisterForm=()=>{const[form,setForm]=useState({nombre:'',email:'',telefono:''});const[enviado,setEnviado]=useState(false);const[mensaje,setMensaje]=useState('');const id_reserv=getQueryParam('id_reserv');const mesa=getQueryParam('mesa');const handleChange=e=>{setForm(_objectSpread(_objectSpread({},form),{},{[e.target.name]:e.target.value}));};const handleSubmit=async e=>{e.preventDefault();const omniToken=\"5|UKrED62UdlgFnt92b0k9q0oamdDvmE3fx5dgcZzL5d8dee5a\";const baseUrl=\"https://api.omniwallet.cloud/v1\";const email=form.email;try{// 1. Verificar si el usuario existe\nconst existeResp=await fetch(\"\".concat(baseUrl,\"/clientes/\").concat(email),{headers:{\"Authorization\":\"Bearer \".concat(omniToken),\"Content-Type\":\"application/json\"}});if(existeResp.status===404){// Usuario nuevo: crear, regalar cupón y asignar puntos\n// Crear usuario\nawait fetch(\"\".concat(baseUrl,\"/clientes\"),{method:\"POST\",headers:{\"Authorization\":\"Bearer \".concat(omniToken),\"Content-Type\":\"application/json\"},body:JSON.stringify({email:form.email,nombre:form.nombre,telefono:form.telefono})});// Asignar puntos\nawait fetch(\"\".concat(baseUrl,\"/clientes/\").concat(email,\"/a\\xF1adir-puntos-de-valor-de-Exponer\"),{method:\"POST\",headers:{\"Authorization\":\"Bearer \".concat(omniToken),\"Content-Type\":\"application/json\"},body:JSON.stringify({puntos:100// Cambia el valor según tu lógica\n})});setMensaje('¡Usuario registrado y puntos asignados!');}else if(existeResp.status===200){// Usuario ya existe: solo asignar puntos\nawait fetch(\"\".concat(baseUrl,\"/clientes/\").concat(email,\"/a\\xF1adir-puntos-de-valor-de-Exponer\"),{method:\"POST\",headers:{\"Authorization\":\"Bearer \".concat(omniToken),\"Content-Type\":\"application/json\"},body:JSON.stringify({puntos:100// Cambia el valor según tu lógica\n})});setMensaje('¡Usuario existente, puntos asignados!');}else{setMensaje('Error verificando el usuario.');}}catch(error){setMensaje('Error en la comunicación con Omniwallet.');}setEnviado(true);};if(enviado){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:mensaje}),/*#__PURE__*/_jsxs(\"p\",{children:[\"ID Reserva: \",id_reserv]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Mesa: \",mesa]})]});}return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"ID Reserva:\"}),\" \",id_reserv]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Mesa:\"}),\" \",mesa]}),/*#__PURE__*/_jsx(\"input\",{name:\"nombre\",placeholder:\"Nombre\",value:form.nombre||'',onChange:handleChange,required:true}),/*#__PURE__*/_jsx(\"input\",{name:\"email\",placeholder:\"Email\",type:\"email\",value:form.email||'',onChange:handleChange,required:true}),/*#__PURE__*/_jsx(\"input\",{name:\"telefono\",placeholder:\"Tel\\xE9fono\",value:form.telefono||'',onChange:handleChange,required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Registrar\"})]});};export default RegisterForm;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","getQueryParam","param","params","URLSearchParams","window","location","search","get","RegisterForm","form","setForm","nombre","email","telefono","enviado","setEnviado","mensaje","setMensaje","id_reserv","mesa","handleChange","e","_objectSpread","target","name","value","handleSubmit","preventDefault","omniToken","baseUrl","existeResp","fetch","concat","headers","status","method","body","JSON","stringify","puntos","error","children","onSubmit","placeholder","onChange","required","type"],"sources":["C:/Users/santi/Desktop/QR/qrfrontend/src/components/RegisterForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction getQueryParam(param) {\r\n  const params = new URLSearchParams(window.location.search);\r\n  return params.get(param);\r\n}\r\n\r\nconst RegisterForm = () => {\r\n  const [form, setForm] = useState({\r\n    nombre: '',\r\n    email: '',\r\n    telefono: ''\r\n  });\r\n  const [enviado, setEnviado] = useState(false);\r\n  const [mensaje, setMensaje] = useState('');\r\n\r\n  const id_reserv = getQueryParam('id_reserv');\r\n  const mesa = getQueryParam('mesa');\r\n\r\n  const handleChange = e => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n\r\n    const omniToken = \"5|UKrED62UdlgFnt92b0k9q0oamdDvmE3fx5dgcZzL5d8dee5a\";\r\n    const baseUrl = \"https://api.omniwallet.cloud/v1\";\r\n    const email = form.email;\r\n\r\n    try {\r\n      // 1. Verificar si el usuario existe\r\n      const existeResp = await fetch(`${baseUrl}/clientes/${email}`, {\r\n        headers: {\r\n          \"Authorization\": `Bearer ${omniToken}`,\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      });\r\n\r\n      if (existeResp.status === 404) {\r\n        // Usuario nuevo: crear, regalar cupón y asignar puntos\r\n\r\n        // Crear usuario\r\n        await fetch(`${baseUrl}/clientes`, {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Authorization\": `Bearer ${omniToken}`,\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify({\r\n            email: form.email,\r\n            nombre: form.nombre,\r\n            telefono: form.telefono\r\n          })\r\n        });\r\n\r\n        // Asignar puntos\r\n        await fetch(`${baseUrl}/clientes/${email}/añadir-puntos-de-valor-de-Exponer`, {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Authorization\": `Bearer ${omniToken}`,\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify({\r\n            puntos: 100 // Cambia el valor según tu lógica\r\n          })\r\n        });\r\n\r\n        setMensaje('¡Usuario registrado y puntos asignados!');\r\n      } else if (existeResp.status === 200) {\r\n        // Usuario ya existe: solo asignar puntos\r\n        await fetch(`${baseUrl}/clientes/${email}/añadir-puntos-de-valor-de-Exponer`, {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Authorization\": `Bearer ${omniToken}`,\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify({\r\n            puntos: 100 // Cambia el valor según tu lógica\r\n          })\r\n        });\r\n        setMensaje('¡Usuario existente, puntos asignados!');\r\n      } else {\r\n        setMensaje('Error verificando el usuario.');\r\n      }\r\n    } catch (error) {\r\n      setMensaje('Error en la comunicación con Omniwallet.');\r\n    }\r\n\r\n    setEnviado(true);\r\n  };\r\n\r\n  if (enviado) {\r\n    return (\r\n      <div>\r\n        <h2>{mensaje}</h2>\r\n        <p>ID Reserva: {id_reserv}</p>\r\n        <p>Mesa: {mesa}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <strong>ID Reserva:</strong> {id_reserv}\r\n      </div>\r\n      <div>\r\n        <strong>Mesa:</strong> {mesa}\r\n      </div>\r\n      <input\r\n        name=\"nombre\"\r\n        placeholder=\"Nombre\"\r\n        value={form.nombre || ''}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      <input\r\n        name=\"email\"\r\n        placeholder=\"Email\"\r\n        type=\"email\"\r\n        value={form.email || ''}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      <input\r\n        name=\"telefono\"\r\n        placeholder=\"Teléfono\"\r\n        value={form.telefono || ''}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      <button type=\"submit\">Registrar</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}