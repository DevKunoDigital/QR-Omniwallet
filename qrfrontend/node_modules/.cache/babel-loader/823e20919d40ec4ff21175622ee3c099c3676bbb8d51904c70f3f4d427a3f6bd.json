{"ast":null,"code":"import React,{useEffect,useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const QRViewer=()=>{const[qrUrl,setQrUrl]=useState(null);const[nombre,setNombre]=useState('');const[mesa,setMesa]=useState('');const[error,setError]=useState('');useEffect(()=>{const fetchQR=async()=>{try{const resp=await fetch('https://covermanager-883996440.development.catalystserverless.com/server/qrbackend/ultimo-qr');const data=await resp.json();if(data.qrUrl){setQrUrl(data.qrUrl);setNombre(data.nombre);setMesa(data.mesa);}else{setError('No hay QR disponible');}}catch(_unused){setError('Error obteniendo el QR');}};fetchQR();},[]);if(error)return/*#__PURE__*/_jsx(\"div\",{children:error});return/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center'},children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Reserva a nombre de: \",nombre]}),/*#__PURE__*/_jsxs(\"h3\",{children:[\"Mesa: \",mesa]}),qrUrl&&/*#__PURE__*/_jsx(\"img\",{src:qrUrl,alt:\"C\\xF3digo QR\",style:{width:250,height:250}})]});};export default QRViewer;","map":{"version":3,"names":["React","useEffect","useState","jsx","_jsx","jsxs","_jsxs","QRViewer","qrUrl","setQrUrl","nombre","setNombre","mesa","setMesa","error","setError","fetchQR","resp","fetch","data","json","_unused","children","style","textAlign","src","alt","width","height"],"sources":["C:/Users/santi/Desktop/QR/qrfrontend/src/components/QRViewer.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst QRViewer = () => {\r\n    const [qrUrl, setQrUrl] = useState(null);\r\n    const [nombre, setNombre] = useState('');\r\n    const [mesa, setMesa] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchQR = async () => {\r\n            try {\r\n                const resp = await fetch('https://covermanager-883996440.development.catalystserverless.com/server/qrbackend/ultimo-qr');\r\n                const data = await resp.json();\r\n                if (data.qrUrl) {\r\n                    setQrUrl(data.qrUrl);\r\n                    setNombre(data.nombre);\r\n                    setMesa(data.mesa);\r\n                } else {\r\n                    setError('No hay QR disponible');\r\n                }\r\n            } catch {\r\n                setError('Error obteniendo el QR');\r\n            }\r\n        };\r\n        fetchQR();\r\n    }, []);\r\n\r\n    if (error) return <div>{error}</div>;\r\n\r\n    return (\r\n        <div style={{ textAlign: 'center' }}>\r\n            <h2>Reserva a nombre de: {nombre}</h2>\r\n            <h3>Mesa: {mesa}</h3>\r\n            {qrUrl && <img src={qrUrl} alt=\"CÃ³digo QR\" style={{ width: 250, height: 250 }} />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default QRViewer;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnD,KAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CACnB,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGP,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAACQ,MAAM,CAAEC,SAAS,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAACU,IAAI,CAAEC,OAAO,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CACpC,KAAM,CAACY,KAAK,CAAEC,QAAQ,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CAEtCD,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAe,OAAO,CAAG,KAAAA,CAAA,GAAY,CACxB,GAAI,CACA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAC,KAAK,CAAC,8FAA8F,CAAC,CACxH,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAF,IAAI,CAACG,IAAI,CAAC,CAAC,CAC9B,GAAID,IAAI,CAACX,KAAK,CAAE,CACZC,QAAQ,CAACU,IAAI,CAACX,KAAK,CAAC,CACpBG,SAAS,CAACQ,IAAI,CAACT,MAAM,CAAC,CACtBG,OAAO,CAACM,IAAI,CAACP,IAAI,CAAC,CACtB,CAAC,IAAM,CACHG,QAAQ,CAAC,sBAAsB,CAAC,CACpC,CACJ,CAAE,MAAAM,OAAA,CAAM,CACJN,QAAQ,CAAC,wBAAwB,CAAC,CACtC,CACJ,CAAC,CACDC,OAAO,CAAC,CAAC,CACb,CAAC,CAAE,EAAE,CAAC,CAEN,GAAIF,KAAK,CAAE,mBAAOV,IAAA,QAAAkB,QAAA,CAAMR,KAAK,CAAM,CAAC,CAEpC,mBACIR,KAAA,QAAKiB,KAAK,CAAE,CAAEC,SAAS,CAAE,QAAS,CAAE,CAAAF,QAAA,eAChChB,KAAA,OAAAgB,QAAA,EAAI,uBAAqB,CAACZ,MAAM,EAAK,CAAC,cACtCJ,KAAA,OAAAgB,QAAA,EAAI,QAAM,CAACV,IAAI,EAAK,CAAC,CACpBJ,KAAK,eAAIJ,IAAA,QAAKqB,GAAG,CAAEjB,KAAM,CAACkB,GAAG,CAAC,cAAW,CAACH,KAAK,CAAE,CAAEI,KAAK,CAAE,GAAG,CAAEC,MAAM,CAAE,GAAI,CAAE,CAAE,CAAC,EAChF,CAAC,CAEd,CAAC,CAED,cAAe,CAAArB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}